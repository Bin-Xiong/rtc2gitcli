#
# Contains all needed information used while migrate from RTC to git
# uncomment and change the defaults as needed.
#

# User name and email address for the default git user if not defined
# by the RTC check-in information
#user.email=rtc2git@rtc.to
#user.name=RTC 2 git

# Optional - Set encoding of files (For example encoding = UTF-8)
# See "https://github.com/rtcTo/rtc2git/wiki/Encoding" for further instructions
#file.encoding=UTF-8

# Optional, defines a work item number format to apply on each work item bound to
# the specific RTC changeset (if any)
#
# In case you have migrated your workitems to another issue system (like jira/github/bitbucket)
# by using rtc2jira, you can define a prefix for the commit-message, in order that previously 
# linked rtc commits get linked to the new issue system.
#
# Example for a Jira project: AP- (Project has the key AP and is followed by a dash)
# rtc.workitem.number.format=AP-%s 
#
# For more detailed information about smart commits see:
# https://confluence.atlassian.com/jiracloud/processing-jira-issues-with-commit-messages-740098538.html
#rtc.workitem.number.format=%s

# Optional, defines the delimiter between multiple formatted RTC work item numbers. The default is 
# a single space if not defined.
#rtc.workitem.number.delimiter= 

# Not yet used
#!rtc.workitem.text.regex=^(.*)$
#!rtc.workitem.text.replacement=$1

# Not yet used
#!commit.message.regex=^(.*)$
#!commit.message.replacement=$1

# Optional, defines the final commit message format where as the first parameter represents the
# result of the rtc.workitem.* replacement and the second parameter contains the result of the 
# commit.message.* result. The result will be trimmed.
#commit.message.format=%1s %2s

# Optional, specifies the line(s) which are added to .gitattributes
# Define a semicolon-separated list of lines
# Example:
# gitattributes=# handle text files; * text=auto; *.sql text
#gitattributes=
